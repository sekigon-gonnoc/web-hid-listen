!function(){function e(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}class t{get connected(){return this._connected}constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:64,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:30;e(this,"receiveCallback",null),e(this,"closeCallback",null),e(this,"errorCallback",null),e(this,"port",null),e(this,"_connected",!1),this.send_chunk=t,this.send_interval=n}setReceiveCallback(e){this.receiveCallback=t=>{e(new Uint8Array(t.data.buffer).filter((e=>0!=e)))},this.port.addEventListener("inputreport",this.receiveCallback),console.log(this.port)}setErrorCallback(e){this.errorCallback=e}setCloseCallback(e){this.errorCallback=e}async open(e,t){const n=await navigator.hid.requestDevice({filters:[{usagePage:65329,usage:116}]});console.log(n),this.port=n[0];try{await this.port.open()}catch(e){return await this.port.close(),Promise.reject(e)}this._connected=!0,e&&e(),console.log("open Raw HID port")}async writeString(e){throw new Error("Not implemented")}async write(e){throw new Error("Not implemented")}async close(){if(this.closeCallback&&this.closeCallback(),this.port)try{await this.port.close(),this.port=null,this._connected=!1}catch(e){console.error(e)}console.log("Raw HID port closed")}}let n;const c=1e6;document.getElementById("revision").innerText="Revision:".concat("2d1a208"),navigator.serial||alert("Please use chrome or edge");let o,l=document.getElementById("connect");l.onclick=async()=>{var e;if(null!==(e=n)&&void 0!==e&&e.connected)l.innerText="Connect",clearInterval(o),await n.close();else try{n=new t,await n.open(null,{}),n.setReceiveCallback(s),l.innerText="Disconnect",o=setInterval(i,50)}catch(e){console.error(e)}};const r=document.getElementById("console");let a="";function i(){r.insertAdjacentText("beforeend",a),a="",document.getElementById("autoscroll").checked&&(r.scrollTop=r.scrollHeight),r.innerHTML.length>c&&(r.innerHTML=r.innerHTML.slice(r.innerHTML.length-c))}function s(e){a+=(new TextDecoder).decode(e)}document.getElementById("clear").onclick=()=>{r.innerHTML=""},document.getElementById("save").onclick=()=>{let e=document.getElementById("download-file");const t=new Date(Date.now());let n=e=>("00"+e.toString()).slice(-2);e.download="".concat(t.getFullYear()).concat(n(t.getMonth()+1)).concat(n(t.getDate())).concat(n(t.getHours())).concat(n(t.getMinutes())).concat(n(t.getSeconds()),".txt"),e.href=URL.createObjectURL(new Blob([r.innerHTML],{type:"text/plain"})),e.click()}}();
//# sourceMappingURL=index.e4d4db74.js.map
